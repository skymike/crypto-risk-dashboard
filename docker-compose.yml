version: "3.9"
services:

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"

  api:
    build: ./services/api
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    user: "1000:1000"
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "1.0"

  worker:
    build: ./services/worker
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    user: "1000:1000"
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "1.0"

  ui:
    build: ./services/ui
    env_file: .env
    depends_on:
      api:
        condition: service_started
    ports:
      - "8501:8501"
    restart: on-failure
    user: "1000:1000"
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "1.0"

volumes:
  db_data:
